{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_startTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_durationMinutes",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "winner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "AuctionEnded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "bidder",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "NewOffer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "bidder",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Withdrawal",
				"type": "event"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [],
				"name": "EXTENSION_TIME",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "EXTENSION_WINDOW",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MIN_INCREMENT_PERCENT",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "REFUND_FEE_PERCENT",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "bid",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "collectedFees",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "deposits",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "endAuction",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "endTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ended",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "highestBid",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "highestBidder",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "lastOfferIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "numOffers",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "offers",
				"outputs": [
					{
						"internalType": "address",
						"name": "bidder",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "partialWithdrawExcess",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "seller",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "showOffers",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "bidder",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							}
						],
						"internalType": "struct AdvancedAuction.Offer[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "showWinner",
				"outputs": [
					{
						"internalType": "address",
						"name": "winner",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "startTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawDeposit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawFees",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"author": "Feerdus95",
			"details": "Bids are in wei. Handles Ether only, rewards must be delivered separately.",
			"events": {
				"AuctionEnded(address,uint256)": {
					"params": {
						"amount": "The winning bid amount",
						"winner": "The address of the winner"
					}
				},
				"NewOffer(address,uint256)": {
					"params": {
						"amount": "The amount of the offer",
						"bidder": "The address of the participant who made the offer"
					}
				},
				"Withdrawal(address,uint256)": {
					"params": {
						"amount": "The amount withdrawn",
						"bidder": "The address of the participant withdrawing"
					}
				}
			},
			"kind": "dev",
			"methods": {
				"constructor": {
					"params": {
						"_durationMinutes": "Auction duration in minutes",
						"_startTime": "The start timestamp"
					}
				},
				"showOffers()": {
					"returns": {
						"_0": "Array of Offer structs"
					}
				},
				"showWinner()": {
					"returns": {
						"amount": "Winning bid",
						"winner": "Winner address"
					}
				}
			},
			"title": "Advanced Auction Contract with Dynamic Extension and Partial Refunds",
			"version": 1
		},
		"userdoc": {
			"events": {
				"AuctionEnded(address,uint256)": {
					"notice": "Emitted when the auction ends"
				},
				"NewOffer(address,uint256)": {
					"notice": "Emitted when a new valid offer is received"
				},
				"Withdrawal(address,uint256)": {
					"notice": "Emitted on withdrawal"
				}
			},
			"kind": "user",
			"methods": {
				"EXTENSION_TIME()": {
					"notice": "Time (seconds) for auction extension when a valid bid is made near ending (10 min = 600 seconds)"
				},
				"EXTENSION_WINDOW()": {
					"notice": "Time window before the end when extensions are allowed (10 minutes)"
				},
				"MIN_INCREMENT_PERCENT()": {
					"notice": "Minimum percentage increment required for new bids (e.g., 5% = 105)"
				},
				"REFUND_FEE_PERCENT()": {
					"notice": "Commission fee percentage taken from refund to losers (2% = 2)"
				},
				"bid()": {
					"notice": "Place a new bid. Must be at least 5% higher than previous bid and during auction time"
				},
				"collectedFees()": {
					"notice": "Tracks total fees collected from refunds"
				},
				"constructor": {
					"notice": "Initializes the auction"
				},
				"deposits(address)": {
					"notice": "Tracks total deposits for each participant (used for withdrawal/refund)"
				},
				"endAuction()": {
					"notice": "Ends the auction (anyone can call after time's up). Only executes once"
				},
				"endTime()": {
					"notice": "End time (timestamp, dynamically extended)"
				},
				"ended()": {
					"notice": "Auction active flag"
				},
				"highestBid()": {
					"notice": "Highest bid amount"
				},
				"highestBidder()": {
					"notice": "Address of the current highest bidder"
				},
				"lastOfferIndex(address)": {
					"notice": "Tracks the latest offer index for each bidder (for partial withdrawal computation)"
				},
				"numOffers()": {
					"notice": "Returns the current number of offers"
				},
				"partialWithdrawExcess()": {
					"notice": "Partial withdrawal of excess (over last offer) while auction is active"
				},
				"seller()": {
					"notice": "Address of the auction creator/seller"
				},
				"showOffers()": {
					"notice": "Returns list of all offers (for off-chain read)"
				},
				"showWinner()": {
					"notice": "Show the current winner and bid amount"
				},
				"startTime()": {
					"notice": "Start time (timestamp) "
				},
				"withdrawDeposit()": {
					"notice": "Withdraws funds for non-winning bidders after auction ends."
				},
				"withdrawFees()": {
					"notice": "Allows seller to withdraw collected fees from refunds"
				}
			},
			"notice": "Implements an auction with 5% minimum increment, refund with 2% fee, and dynamic end time extension",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"subastaSmartC.sol": "AdvancedAuction"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"subastaSmartC.sol": {
			"keccak256": "0xf815010e6699b7ea9827949b0795ffe3b6c8f9e7bc17545c3a404dfc76311ac4",
			"license": "MIT",
			"urls": [
				"bzz-raw://176cdc8b2b906d65331bca8681848e0989c1152afe1e5e0a1dcfba5b30b9e3c0",
				"dweb:/ipfs/QmPoBpFJmvYeQUffqHoXDPokYhxj6JFUtRoJtVvXRuCbGq"
			]
		}
	},
	"version": 1
}